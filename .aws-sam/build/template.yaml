AWSTemplateFormatVersion: 2010-09-09
Description: eventbridge-scheduler-demo
Transform: AWS::Serverless-2016-10-31
Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: timezone
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      - AttributeName: timezone
        KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      GlobalSecondaryIndexes:
      - IndexName: timezone-index
        KeySchema:
        - AttributeName: timezone
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  DailyNatibeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: DailyNatibeFunction
      CodeUri: DailyNatibeFunction
      Handler: index.handler
      Runtime: nodejs16.x
      MemorySize: 512
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME:
            Ref: UsersTable
          TABLE_ARN:
            Fn::GetAtt:
            - UsersTable
            - Arn
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
      Events:
        ScheduleUTC:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(30 8 * * ? *)
            Input: '{"timezone": "UTC"}'
        ScheduleEurope:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(30 8 * * ? *)
            ScheduleExpressionTimezone: Europe/Helsinki
            Input: '{"timezone": "Europe/Helsinki"}'
        ScheduleEST:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: cron(30 8 * * ? *)
            ScheduleExpressionTimezone: America/New_York
            Input: '{"timezone": "America/New_York"}'
        ScheduleTest:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(5 minutes)
            Input: '{"timezone": "test"}'
    Metadata:
      SamResourceId: DailyNatibeFunction
  DailyNatibeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${DailyNatibeFunction}
  Function:
    Type: AWS::Serverless::Function
    Properties:
      Description:
        Fn::Sub:
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: Function
      CodeUri: Function
      Handler: index.handler
      Runtime: nodejs16.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
    Metadata:
      SamResourceId: Function
  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${Function}
